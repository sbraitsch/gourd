// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.771
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func QuestionContainer(question templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<style>\n        .footer {\n            display: flex;\n            align-content: center;\n            justify-content: space-between;\n            width: 100%;\n            padding-top: 1em;\n            padding-bottom: 1em;\n        }\n        .progress {\n            margin: 0;\n        }\n        .text-btn {\n            font-size: 1.5em !important;\n            background: none;\n            border: none;\n            color: inherit;\n            font: inherit;\n            cursor: pointer;\n            text-align: right;\n            padding: 0;\n            margin: 0;\n        }\n        .text-btn:hover {\n            text-decoration: underline;\n        }\n\n    </style><div id=\"question-container\" class=\"container\"><div id=\"question\" class=\"question\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = question.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><script>\n            let lang\n            let editor\n            let textarea\n            let previous\n            function updateTextArea() {\n                textarea = document.getElementById('code-editor');\n                textarea.value = editor.getValue()\n            }\n            function initEditor() {\n                lang = JSON.parse(document.getElementById('mode').textContent);\n                editor = CodeMirror.fromTextArea(document.getElementById('code-editor'), {\n                    mode: lang,\n                    theme: \"ayu-dark\",\n                    lineNumbers: true,\n                    matchBrackets: true\n                });\n                editor.on('change', updateTextArea)\n            }\n            initEditor()\n            document.body.addEventListener('htmx:afterSwap', function(event) {\n                if (event.detail.target.id === \"question\") {\n                    editor = CodeMirror.fromTextArea(document.getElementById('code-editor'), {\n                         mode: lang,\n                         theme: \"ayu-dark\",\n                         lineNumbers: true,\n                         matchBrackets: true\n                    });\n                    editor.on('change', updateTextArea)\n                }\n            })\n\n            function checkAndSync() {\n                textarea = document.getElementById('code-editor');\n                if (textarea.value !== previous) {\n                    document.body.dispatchEvent(new Event('sync'));\n                    previous = textarea.value\n                    console.log(\"sync\")\n                }\n            }\n            setInterval(checkAndSync, 5000)\n        </script></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
